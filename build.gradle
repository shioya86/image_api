plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'jp.harashio'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation (
            'com.fasterxml.jackson.module:jackson-module-kotlin',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-webflux',
            "org.springframework.security:spring-security-web:6.5.2",
            'org.jetbrains.kotlin:kotlin-reflect',

            // DB
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.postgresql:postgresql',
            'org.flywaydb:flyway-database-postgresql:11.1.1',

            // Amazon S3
            "io.awspring.cloud:spring-cloud-aws-starter:3.0.2",
            "io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.2",
            "com.amazonaws:aws-java-sdk-s3:1.12.681",
            "software.amazon.awssdk:s3",
            platform("software.amazon.awssdk:bom:2.20.0"),

            // Logger
            "org.springframework.boot:spring-boot-starter-aop",

            // Firebase
            'com.google.firebase:firebase-admin:9.2.0',

            // JWT
            'io.jsonwebtoken:jjwt-api:0.11.5',
            'io.jsonwebtoken:jjwt-impl:0.11.5',
            'io.jsonwebtoken:jjwt-jackson:0.11.5'
    )

    compileOnly (
            'org.projectlombok:lombok:1.18.10'
    )

    annotationProcessor(
            'org.projectlombok:lombok:1.18.10'
    )
    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.jetbrains.kotlin:kotlin-test-junit5'
    )

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
    useJUnitPlatform()
}
